<script>
    import Fgift from "@/components/live/Fgift.vue";
    import Fdanmu from "@/components/live/Fdanmu.vue";
    import uniPopup from "@/components/uni-popup_1.8.4/components/uni-popup/uni-popup.vue";
    import giftsDemo from '@/demo/gifts'

    export default {
        name: "index",
        components: {
            Fgift,
            uniPopup,
            Fdanmu
        },
        data () {
            return {
                statusBarHeight: 0,
                content: '',
                gifts: [],
                giftActiveId: 0,

                url: '',
                mode: 'SD',
                enableCamera: true,
                beauty: 0,
                whiteness: 0,
                position: 'back',

                btns: [
                    {
                        name: '翻转',
                        icon: '\ue605'
                    },
                    {
                        name: '画质',
                        icon: '\ue608'
                    },
                    {
                        name: '美颜',
                        icon: '\ue632;'
                    },
                    {
                        name: '美白',
                        icon: '\ue631'
                    },
                    {
                        name: '更多',
                        icon: '\ue719'
                    },
                ],

                windowHeight: 0,

                popupState: 'mode',
                context: null,
                modeList: [
                    {
                        type: 'SD',
                        text: '标清'
                    },
                    {
                        type: 'HD',
                        text: '高清'
                    },
                    {
                        type: 'FHD',
                        text: '超清'
                    },
                ],
            }
        },
        onReady() {
            // 开启直播预览
            this.context = uni.createLivePusherContext('livePusher', this)
            this.startPreview()
        },
        onLoad (e) {
            // 获取设备状态栏高度
            const res = uni.getSystemInfoSync()
            this.statusBarHeight = res.statusBarHeight
            this.windowHeight = res.windowHeight

            // 接受开播参数
            let options = JSON.parse(decodeURIComponent(e.options));
            ({
                mode: this.mode,
                position: this.position,
                beauty: this.beauty,
                whiteness: this.whiteness
            } = options)
        },
        mounted () {
            this.gifts = giftsDemo
        },
        methods: {
            // 开启预览
            startPreview () {
                this.context.startPreview({
                    success: () => {

                    }
                })
            },
            // 返回上一页
            back () {
                uni.showModal({
                    content: '您是否要结束当前直播？',
                    success: res => {
                        if (res.confirm) {
                            uni.navigateBack({
                                delta: 2
                            })
                        }
                    }
                })
            },
            // 翻转摄像头
            switchCamera () {
                this.context.switchCamera()
            },
            // 打开选择弹窗
            openPopup (state) {
                this.popupState = state
                this.$refs.popup.open()
            },
            // 关闭选择弹窗
            closePopup () {
                this.$refs.popup.close()
            },
            // 选择
            chooseMode (item) {
                if (this.mode === item.type) return this.closePopup()
                this.mode = item.type
                uni.showToast({
                    title: '成功切换为' + item.text
                })
                this.closePopup()
            },
            handleSlider (e) {
                this[this.popupState] = e.detail.value
            },
            // 处理底部功能按钮
            handlerBottomEvent (item) {
                const handlerMap = {
                    '翻转': this.switchCamera,
                    '画质': () => this.openPopup('mode'),
                    '美颜': () => this.openPopup('beauty'),
                    '美白': () => this.openPopup('whiteness'),
                    '更多': () => this.openPopup('more'),
                }
                if (item.name in handlerMap) handlerMap[item.name]()
            }
        }
    }
</script>

<template>
    <view class="page">
        <live-pusher
            id="livePusher"
            ref="livePusher"
            :url="url"
            :mode="mode"
            :enable-camera="enableCamera"
            auto-focus
            :device-position="position"
            :beauty="beauty"
            :whiteness="whiteness"
            aspect="9:16"
            :style="'height:' + windowHeight + 'px'"
            style="width: 750rpx;"
        >
        </live-pusher>
        <!-- 顶部状态展示部分 -->
        <view class="live-top__warpper" :style="{
			top: statusBarHeight + 'px'
		}">
            <!-- 个人信息展示部分 -->
            <view class="live-top__content px-2 flex justify-between">
                <view class="flex rounded-circle" style="background-color: rgba(0,0,0,.4);width: 325rpx">
                    <view class="p">
                        <image style="width: 70rpx;height: 70rpx;" class="rounded-circle " src="@/static/demo/1.jpg"
                               mode="aspectFill"></image>
                    </view>
                    <view class="flex-1 flex flex-column justify-center">
                        <text class="text-white font-sm">昵称</text>
                        <text class="text-white font-sm">1000</text>
                    </view>
                    <view class="p">
                        <view class="rounded-circle flex align-center justify-center bg-danger"
                              style="width: 70rpx;height: 70rpx;">
                            <text class="text-white">+</text>
                        </view>
                    </view>
                </view>
                <view class="flex rounded-circle" style="width: 325rpx">
                    <scroll-view scroll-x class="flex-1 flex">
                        <view class="p" v-for="i in 15">
                            <image style="width: 70rpx;height: 70rpx;" class="rounded-circle " src="@/static/demo/1.jpg"
                                   mode="aspectFill"></image>
                        </view>
                    </scroll-view>
                    <view class="p">
                        <view class="rounded-circle flex align-center justify-center bg-primary"
                              style="width: 70rpx;height: 70rpx;">
                            <text class="text-white font-sm">1000</text>
                        </view>
                    </view>
                </view>
            </view>
            <!-- 金币 -->
            <view style="height: 80rpx;" class="px-2 my-2">
                <view class="flex rounded-circle" style="width: 325rpx;height: 80rpx;background-color: rgba(0,0,0,.4);">
                    <view class="p flex align-center">
                        <text class="text-warning" style="margin-left: 20rpx;font-size: 30rpx;">金币</text>
                    </view>
                    <view class="flex-1 flex flex-column justify-center">
                        <text class="text-white font-sm">1000</text>
                    </view>
                </view>
            </view>
            <!-- 礼物 -->
            <Fgift ref="giftRef"></Fgift>
        </view>
        <!-- 弹幕 -->
        <Fdanmu ref="fdanmu"></Fdanmu>
        <!-- 底部礼物栏部分 -->
        <view class="live-bottom__warpper flex align-center justify-between">
            <view v-for="item in btns" @click="handlerBottomEvent(item)" :key="item.icon" class="flex-1 flex flex-column justify-center align-center">
                <text class="iconfont text-white mb-1">{{ item.icon }}</text>
                <text class="text-white font">{{ item.name }}</text>
            </view>
        </view>

        <!--    画质切换弹窗-->
        <uni-popup type="bottom" ref="popup">
            <view class="bg-white">
                <view class="flex justify-center align-center border-bottom" style="height: 90rpx;">
                    <text class="font-md" v-if="popupState === 'mode'">切换画质</text>
                    <text class="font-md" v-if="popupState === 'beauty'">选择美颜</text>
                    <text class="font-md" v-if="popupState === 'whiteness'">选择美白</text>
                    <text class="font-md" v-if="popupState === 'more'">更多</text>
                </view>
                <view class="" v-if="popupState === 'mode'">
                    <view class="flex justify-center align-center py-2" :class="mode === item.type ? 'bg-main ' : ''" @click="chooseMode(item)" v-for="item of modeList" :key="item.text">
                        <text class="font-md" :class="mode===item.type ? 'text-white': ''">{{ item.text }}</text>
                    </view>
                </view>
                <view class="" v-if="popupState === 'beauty'">
                    <slider :min="0" :max="9" :step="1" @change="handleSlider" :value="beauty" show-value :block-size="18"></slider>
                </view>
                <view class="" v-if="popupState === 'whiteness'">
                    <slider :min="0" :max="9" :step="1" @change="handleSlider" :value="whiteness" show-value :block-size="18"></slider>
                </view>
                <!-- 更多 -->
                <view class="flex flex-wrap" v-if="popupState === 'more'">
                    <view class="flex flex-column justify-center align-center" style="width: 150rpx;height: 150rpx;">
                        <text class="iconfont mb-1">&#xe65d;</text>
                        <text class="font">暂停</text>
                    </view>
                    <view @click="back" class="flex flex-column justify-center align-center" style="width: 150rpx;height: 150rpx;">
                        <text class="iconfont mb-1">&#xe892;</text>
                        <text class="font">退出</text>
                    </view>
                </view>
                <view class="f-divider"></view>
                <view class="flex justify-center align-center" style="height: 90rpx;" @click="closePopup">
                    <text class="font-md">取消</text>
                </view>
            </view>
        </uni-popup>
    </view>
</template>

<style scoped lang="scss">
    .page {
        flex: 1;
    }

    // 顶部
    .live-top__warpper {
        position: fixed;
        left: 0;
        right: 0;

        .live-top__content {
            height: 80rpx;
        }
    }

    // 底部
    .live-bottom__warpper {
        position: fixed;
        left: 0;
        right: 0;
        bottom: 0;
        height: 120rpx;


    }

</style>
